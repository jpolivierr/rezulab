CREATE TABLE IF NOT EXISTS contact_number(
	id BIGINT AUTO_INCREMENT PRIMARY KEY,
    type VARCHAR(40) NULL DEFAULT "mobile",
    ext VARCHAR(40) NULL,
    number INT NULL,
	date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS address(
	id BIGINT AUTO_INCREMENT PRIMARY KEY,
    street VARCHAR(250) NULL,
    city VARCHAR(250) NOT NULL,
    state VARCHAR(50) NOT NULL,
    zip_code VARCHAR(250) NOT NULL,
	date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS company(
	id BIGINT AUTO_INCREMENT PRIMARY KEY,
    address_id BIGINT NULL UNIQUE,
    contact_number_id BIGINT NULL,
    name VARCHAR(256) NOT NULL,
    about TEXT NULL,
	date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_company_adderss FOREIGN KEY (address_id) REFERENCES address(id),
	CONSTRAINT fk_company_contactId FOREIGN KEY (contact_number_id) REFERENCES contact_number(id)
);

CREATE TABLE IF NOT EXISTS pay_range(
	id BIGINT AUTO_INCREMENT PRIMARY KEY,
	min INT DEFAULT 0,
    max INT DEFAULT 0,
    period VARCHAR(250) NULL,
    date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS job_listings(
	id BIGINT AUTO_INCREMENT PRIMARY KEY,
    company_id BIGINT NOT NULL,
    pay_range_id BIGINT NULL,
    job_title VARCHAR(250) NOT NULL,
    job_description TEXT NOT NULL,
    job_type VARCHAR(250) NOT NULL DEFAULT "full-time",
    date_posted TIMESTAMP NULL,
    work_setting varchar(250) DEFAULT "office",
    status VARCHAR(250) NULL,
    source VARCHAR(250) NULL,
    isUrgent boolean DEFAULT false,
	date_created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_jobListings_company FOREIGN KEY (company_id) REFERENCES company(id),
    CONSTRAINT fk_jobListings_payRange FOREIGN KEY (pay_range_id ) REFERENCES pay_range(id)
);